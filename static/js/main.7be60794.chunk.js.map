{"version":3,"sources":["serviceWorker.ts","infrastructure/utils.ts","menu/actions.ts","infrastructure/networking/youtube.ts","board/actions.ts","infrastructure/networking/fetch.ts","infrastructure/keys.ts","infrastructure/board.utils.ts","infrastructure/operations.ts","infrastructure/array.ts","board/reducer.ts","infrastructure/actions.types.ts","infrastructure/state/initialState.ts","menu/reducer.ts","infrastructure/state/store.ts","player/reducer.ts","infrastructure/constants.ts","board/components/index.ts","infrastructure/actions.ts","board/Card.tsx","menu/components/index.ts","menu/SearchSidebar.tsx","infrastructure/hooks.ts","menu/constants.ts","infrastructure/components/EditableTitle.tsx","menu/BoardsSidebar.tsx","menu/SimilarSidebar.tsx","menu/Sidebar.tsx","player/Player.tsx","board/Column.tsx","board/index.tsx","AppLayout.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","createId","Math","random","topBarButtonPressed","buttonPressedType","type","ACTIONS","searchForVideos","verb","props","input","url","part","maxResults","fetch","then","res","json","data","items","filter","item","isItemSupported","getId","kind","map","mapItem","base","imageUrl","snippet","thumbnails","medium","text","title","id","mapType","videoId","playlistId","resourceId","logRequest","term","requestType","console","log","itemKind","defaultProps","key","allProps","Object","keys","join","parseProps","createColumn","columnConfiguration","CREATE_COLUMN","selectBoard","boardId","SELECT_BOARD","doneLoadingPlaylist","DONE_LOADING_PLAYLIST","getItemsFor","state","columnId","searchResults","similarState","getBoardWithColumn","boards","columns","getSelectedBoard","selectedBoard","boardsOrder","find","columnOrders","indexOf","removeItemFromBoard","itemIndex","remove","updateColumnInSelectedBoard","insertIntoColumn","insert","newItems","index","copy","splice","append","array","concat","prepend","selectOtherBoard","boardBeingRemoved","b","updateBoard","board","updateColumnInBoard","column","createDefaultBoard","newBoard","JSON","parse","stringify","boardName","boardOptions","getColumnsForSelectedBoard","updateBoardOptions","options","updateOptions","updateUserOptions","userOptions","rootReducer","reduceReducers","BOARD_1","name","BOARD_2","isLeftSidebarVisible","leftSidebarContentType","isLoading","action","RESET","REMOVE_COLUMN","cc","newColumn","columnName","fromStart","SEARCH_DONE","RENAME_COLUMN","newName","DRAG_END","result","destination","source","droppableId","draggableId","oldItem","without","handleDnd","dropResult","CREATE_BOARD","RENAME_BOARD","newText","REMOVE_BOARD","PLAY","itemBeingPlayed","isLoadingSimilar","leftVisible","sidebarState","newSidebarState","FIND_SIMILAR_DONE","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistedReducer","persistReducer","blacklist","storage","store","createStore","applyMiddleware","thunk","persistor","persistStore","STACK_WIDTH","STACK_PADDING","CARD_IMAGE_WIDTH","CARD_IMAGE_HEIGHT","imageWidth","CARD_HEIGHT","CARD_WIDTH","stackWidth","CARD_TEXT_WIDTH","BORDER_RADIUS","SIDEBAR_WIDTH","TOP_BAR_HEIGHT","PLAYER_HEIGHT","MAIN_COLOR","MENU_COLOR","ACCENT_COLOR","COLUMN_COLOR","Options","styled","div","ColumnContainer","c","TaskList","BoardContainer","Title","h4","CardButton","button","CardType","TaskContainer","isPlaying","Img","img","Subtext","play","connect","currentItemId","findSimilar","dispatch","getState","relatedToVideoId","searchSimilar","findSimilarArtistsDone","loadPlaylist","onFindSimilar","e","stopPropagation","provided","data-testid","onClick","ref","innerRef","dragHandleProps","draggableProps","src","Truncate","width","lines","DOMParser","parseFromString","body","textContent","playlist","onLoadPlaylist","BoardOptions","BoardItemView","isSelected","SidebarVideosContainer","searchDone","useState","setTerm","debounced","value","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","shart","q","searchVideos","response","onChange","target","droppableProps","i","placeholder","EditableTitle","label","onRename","onRemove","testIdGroupName","isRenaming","setIsRenaming","setNewText","onBlur","autoFocus","onKeyPress","app","createAndSelectNewBoard","newID","renameBoard","removeBoard","Sidebar","BottomBar","YoutubePlayerWrapper","style","onReady","opts","height","playerVars","autoplay","position","right","bottom","getNextPlayItem","itemId","predicate","findIndex","getNextItem","getColumnIdForVideo","getPrevPlayItem","getPreviousItem","colId","nextItem","prevItem","setPlayer","disabled","onEnd","renameColumn","removeColumn","columnProvided","direction","Column","Container","TopBar","MainContainer","isVisible","LeftSidebar","RightSidebar","MainContent","endDrag","onDragEnd","float","purge","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7be60794.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const createId = () =>\n  Math.random() + '';\n\nexport default {\n  createId\n}\n","import { Item, SidebarState } from \"../infrastructure/types\";\nexport type Action =\n  | FindSimilarArtistsDone\n  | FindSimilarArtistsStart\n  | TopBarButtonPressed;\n\nexport interface FindSimilarArtistsDone {\n  type: \"FIND_SIMILAR_DONE\";\n  items: Item[];\n}\n\nexport interface TopBarButtonPressed {\n  type: \"TOP_BAR_BUTTON_PRESSED\";\n  buttonPressedType: SidebarState;\n}\n\nexport interface FindSimilarArtistsStart {\n  type: \"FIND_SIMILAR_START\";\n  items: Item[];\n}\n\nexport const findSimilarArtistsDone = (\n  items: Item[]\n): FindSimilarArtistsDone => ({\n  type: \"FIND_SIMILAR_DONE\",\n  items\n});\n\nexport const topBarButtonPressed = (\n  buttonPressedType: SidebarState\n): TopBarButtonPressed => ({\n  type: \"TOP_BAR_BUTTON_PRESSED\",\n  buttonPressedType\n});\n","import { YOUTUBE_KEY } from \"../keys\";\nimport { ItemKind, ItemsItem, YoutubeSearchResponse } from \"./types\";\nimport { Item, ItemType } from \"../types\";\nimport { createId } from \"../utils\";\nimport { myFetch } from \"./fetch\";\ninterface ResponseType {\n  items: Item[];\n}\n\nexport const searchVideos = (\n  term: string\n  // pageToken?: string\n): Promise<ResponseType> =>\n  searchForVideos(\"search\", {\n    shart: \"mostPopular\",\n    q: logRequest(term, \"search\")\n  });\n\nexport const searchSimilar = (videoId: string) =>\n  searchForVideos(\"search\", {\n    type: \"video\",\n    relatedToVideoId: logRequest(videoId, \"search.similar\")\n  });\n\nexport const loadPlaylistVideos = (playlistId: string) =>\n  searchForVideos(\"playlistItems\", {\n    part: \"snippet\",\n    playlistId,\n    maxResults: 20\n  });\n\nconst searchForVideos = (verb: string, props: {}): Promise<ResponseType> =>\n  myFetch(\n    url(verb, {\n      part: \"snippet\",\n      maxResults: 20,\n      ...props\n    })\n  ).then((data: YoutubeSearchResponse) => {\n    return {\n      items: data.items\n        .filter(item => isItemSupported(getId(item).kind))\n        .map(mapItem)\n    };\n  });\n\nconst mapItem = (item: ItemsItem): Item => {\n  const base = {\n    imageUrl: item.snippet.thumbnails.medium.url,\n    text: item.snippet.title,\n    id: createId(),\n    type: mapType(getId(item).kind)\n  };\n  if (base.type === \"video\") {\n    //@ts-ignore\n    base.videoId = getId(item).videoId;\n  } else {\n    //@ts-ignore\n    base.playlistId = getId(item).playlistId;\n  }\n  // @ts-ignore\n  return base;\n};\n\nconst getId = (item: any) => {\n  if (item.kind === \"youtube#playlistItem\") return item.snippet.resourceId;\n  return item.id;\n};\n\nconst logRequest = (term: string, requestType: string) => {\n  console.log(requestType, term);\n  return term;\n};\n\nconst isItemSupported = (itemKind: ItemKind): boolean =>\n  itemKind === \"youtube#video\" ||\n  itemKind === \"youtube#playlist\" ||\n  itemKind === \"youtube#playlistItem\";\n// itemKind === \"youtube#channel\";\n\nconst mapType = (itemKind: ItemKind): ItemType => {\n  if (itemKind === \"youtube#video\" || itemKind === \"youtube#playlistItem\")\n    return \"video\";\n  else return \"playlist\";\n};\n\nconst defaultProps = {\n  key: YOUTUBE_KEY\n};\n\nconst parseProps = (props: any): string => {\n  const allProps = { ...props, ...defaultProps };\n  return Object.keys(allProps)\n    .filter(key => typeof allProps[key] !== \"undefined\")\n    .map(key => `${key}=${allProps[key]}`)\n    .join(\"&\");\n};\nconst url = (verb: string, props: {}) =>\n  `https://www.googleapis.com/youtube/v3/${verb}?${parseProps(props)}`;\n","import {ApplicationState, Item, PlaylistItem} from \"../infrastructure/types\";\nimport { DropResult } from \"react-beautiful-dnd\";\nimport { createId } from \"../infrastructure/utils\";\nimport { findSimilarArtistsDone, topBarButtonPressed } from \"../menu/actions\";\nimport { loadPlaylistVideos, searchSimilar } from \"../infrastructure/networking/youtube\";\n\nexport enum ACTIONS {\n  REMOVE_COLUMN = \"REMOVE_COLUMN\",\n  CREATE_COLUMN = \"CREATE_COLUMN\",\n  SEARCH_DONE = \"SEARCH_DONE\",\n  FIND_SIMILAR_START = \"FIND_SIMILAR_START\",\n  FIND_SIMILAR_DONE = \"FIND_SIMILAR_DONE\",\n  SELECT_BOARD = \"SELECT_BOARD\",\n  RENAME_COLUMN = \"RENAME_COLUMN\",\n  DRAG_END = \"DRAG_END\",\n  CREATE_BOARD = \"CREATE_BOARD\",\n  REMOVE_BOARD = \"REMOVE_BOARD\",\n  RENAME_BOARD = \"RENAME_BOARD\",\n  DONE_LOADING_PLAYLIST = \"DONE_LOADING_PLAYLIST\",\n  RESET = \"RESET\"\n}\n\nexport interface RemoveAction {\n  type: ACTIONS.REMOVE_COLUMN;\n  columnId: string;\n}\n\nexport interface RenameColumn {\n  type: ACTIONS.RENAME_COLUMN;\n  columnId: string;\n  newName: string;\n}\n\nexport interface SelectBoard {\n  type: ACTIONS.SELECT_BOARD;\n  boardId: string;\n}\n\nexport interface CreateColumnConfig {\n  fromStart: boolean;\n  columnId: string;\n  columnName: string;\n  isLoading: boolean;\n}\n\nexport interface CreateColumnAction {\n  type: ACTIONS.CREATE_COLUMN;\n  columnConfiguration: Partial<CreateColumnConfig>;\n}\n\nexport interface SearchDone {\n  type: ACTIONS.SEARCH_DONE;\n  items: Item[];\n}\n\nexport interface EndDrag {\n  type: ACTIONS.DRAG_END;\n  dropResult: DropResult;\n}\n\nexport interface CreateBoard {\n  type: ACTIONS.CREATE_BOARD;\n  boardId: string;\n}\nexport interface RenameBoard {\n  type: ACTIONS.RENAME_BOARD;\n  boardId: string;\n  newText: string;\n}\nexport interface RemoveBoard {\n  type: ACTIONS.REMOVE_BOARD;\n  boardId: string;\n}\nexport interface Reset {\n  type: ACTIONS.RESET;\n}\nexport interface DoneLoadingPlaylist {\n  type: ACTIONS.DONE_LOADING_PLAYLIST;\n  items: Item[];\n  playlistId: string;\n}\n\nexport type Action =\n  | RemoveAction\n  | CreateColumnAction\n  | SelectBoard\n  | RenameColumn\n  | EndDrag\n  | CreateBoard\n  | RenameBoard\n  | RemoveBoard\n  | Reset\n  | DoneLoadingPlaylist\n  | SearchDone;\n\nexport const removeColumn = (columnId: string) => ({\n  type: ACTIONS.REMOVE_COLUMN,\n  columnId\n});\n\nexport const searchDone = (items: Item[]) => ({\n  type: ACTIONS.SEARCH_DONE,\n  items\n});\n\nexport const createColumn = (\n  columnConfiguration: Partial<CreateColumnConfig> = {}\n): CreateColumnAction => ({\n  type: ACTIONS.CREATE_COLUMN,\n  columnConfiguration\n});\n\nexport const selectBoard = (boardId: string) => ({\n  type: ACTIONS.SELECT_BOARD,\n  boardId\n});\n\nexport const renameColumn = (columnId: string, newName: string) => ({\n  type: ACTIONS.RENAME_COLUMN,\n  columnId,\n  newName\n});\n\nexport const createAndSelectNewBoard = (): CreateBoard => {\n  const newID = createId();\n  return {\n    type: ACTIONS.CREATE_BOARD,\n    boardId: newID\n  };\n};\n\nexport const endDrag = (dropResult: DropResult): EndDrag => ({\n  type: ACTIONS.DRAG_END,\n  dropResult\n});\n\nexport const renameBoard = (\n  boardId: string,\n  boardName: string\n): RenameBoard => ({\n  type: ACTIONS.RENAME_BOARD,\n  boardId,\n  newText: boardName\n});\n\nexport const removeBoard = (boardId: string): RemoveBoard => ({\n  type: ACTIONS.REMOVE_BOARD,\n  boardId\n});\n\nexport const findSimilar = (videoId: string) => (\n  dispatch: any,\n  getState: () => ApplicationState\n) => {\n  const { userOptions } = getState();\n  if (\n    !userOptions.isLeftSidebarVisible ||\n    userOptions.leftSidebarContentType !== \"similar\"\n  )\n    dispatch(topBarButtonPressed(\"similar\"));\n\n  searchSimilar(videoId).then(({ items }) => {\n    dispatch(findSimilarArtistsDone(items));\n  });\n};\n\nexport const loadPlaylist = (item: PlaylistItem) => (dispatch: any) => {\n  const id = createId();\n  dispatch(\n    createColumn({ columnName: item.text, columnId: id, fromStart: true })\n  );\n\n  loadPlaylistVideos(item.playlistId).then(({ items }) => {\n    dispatch(doneLoadingPlaylist(id, items));\n  });\n};\n\nexport const reset = (): Reset => ({\n  type: ACTIONS.RESET\n});\n\nexport const doneLoadingPlaylist = (\n  playlistId: string,\n  items: Item[]\n): DoneLoadingPlaylist => ({\n  type: ACTIONS.DONE_LOADING_PLAYLIST,\n  items,\n  playlistId\n});\n","import {YoutubeSearchResponse} from \"./types\";\n\n//used for mocking in automated tests\n//otherwise an external library is required\nexport const myFetch = (input: RequestInfo): Promise<YoutubeSearchResponse> =>\n  fetch(input).then(res => res.json());\n","export const YOUTUBE_KEY = \"AIzaSyAk1MbyIUnFinouWsMg46UwgHa8JjHBrsw\";\n","import { ApplicationState, Item } from \"./types\";\n\nexport const getItemsFor = (\n  state: ApplicationState,\n  columnId: string\n): Item[] => {\n  if (columnId === \"SEARCH\") return state.searchResults;\n  if (columnId === \"SIMILAR\") return state.similarState.items;\n  const boardId = getBoardWithColumn(state, columnId);\n  if (boardId) return state.boards[boardId].columns[columnId].items;\n  else return [];\n};\n\nexport const getSelectedBoard = (state: ApplicationState) =>\n  state.boards[state.selectedBoard];\n\nexport const getBoardWithColumn = (\n  state: ApplicationState,\n  columnId: string\n): string =>\n  state.boardsOrder.find(\n    boardId => state.boards[boardId].columnOrders.indexOf(columnId) >= 0\n  ) as string;\n","import { ApplicationState } from \"./types\";\nimport { DropResult } from \"react-beautiful-dnd\";\nimport { updateColumnInSelectedBoard } from \"../board/reducer\";\nimport {getItemsFor, getSelectedBoard} from \"./board.utils\";\n\nexport const handleDnd = (\n  state: ApplicationState,\n  result: DropResult\n): ApplicationState => {\n  const { destination, source } = result;\n  if (!destination) return state;\n\n  if (\n    destination.droppableId === source.droppableId &&\n    destination.index === source.index\n  )\n    return state;\n\n  if (source.droppableId === \"board\") {\n    const board = getSelectedBoard(state);\n    const columnOrders = [...board.columnOrders];\n    columnOrders.splice(source.index, 1);\n    columnOrders.splice(destination.index, 0, result.draggableId);\n    return {\n      ...state,\n      boards: {\n        ...state.boards,\n        [board.boardId]: {\n          ...board,\n          columnOrders\n        }\n      }\n    };\n  }\n\n  const oldItem = getItemsFor(state, source.droppableId)[source.index];\n  const without = removeItemFromBoard(state, source.droppableId, source.index);\n\n  return insertIntoColumn(\n    without,\n    destination.droppableId,\n    destination.index,\n    oldItem\n  );\n};\n\nconst removeItemFromBoard = (\n  state: ApplicationState,\n  columnId: string,\n  itemIndex: number\n): ApplicationState => {\n  if (columnId === \"SEARCH\")\n    return {\n      ...state,\n      searchResults: remove(state.searchResults, itemIndex)\n    };\n  if (columnId === \"SIMILAR\")\n    return {\n      ...state,\n      similarState: {\n        ...state.similarState,\n        items: remove(state.similarState.items, itemIndex)\n      }\n    };\n  return updateColumnInSelectedBoard(state, {\n    id: columnId,\n    items: remove(getSelectedBoard(state).columns[columnId].items, itemIndex)\n  });\n};\n\nconst insertIntoColumn = (\n  state: ApplicationState,\n  columnId: string,\n  itemIndex: number,\n  item: any\n): ApplicationState => {\n  if (columnId === \"SEARCH\") {\n    return {\n      ...state,\n      searchResults: insert(state.searchResults, itemIndex, item)\n    };\n  }\n  if (columnId === \"SIMILAR\") {\n    return {\n      ...state,\n      similarState: {\n        ...state.similarState,\n        items: insert(state.similarState.items, itemIndex, item)\n      }\n    };\n  }\n  const newItems = insert(\n    getSelectedBoard(state).columns[columnId].items,\n    itemIndex,\n    item\n  );\n  return updateColumnInSelectedBoard(state, {\n    id: columnId,\n    items: newItems\n  });\n};\n\nconst insert = <T>(items: T[], index: number, item: T) => {\n  const copy = [...items];\n  copy.splice(index, 0, item);\n  return copy;\n};\n\nconst remove = <T>(items: T[], index: number) => {\n  const copy = [...items];\n  copy.splice(index, 1);\n  return copy;\n};\n\n","export const getNextItem = <T>(\n  array: T[],\n  predicate: (item: T) => boolean\n): T | undefined => {\n  const index = array.findIndex(predicate);\n  const nextItem = index + 1;\n  return array[nextItem];\n};\n\nexport const getPreviousItem = <T>(\n  array: T[],\n  predicate: (item: T) => boolean\n): T | undefined => {\n  if(!array)\n    return undefined;\n  const index = array.findIndex(predicate);\n  const nextItem = index - 1;\n  return array[nextItem];\n};\n\nexport const append = <T>(array: T[], item: T): T[] => array.concat([item]);\nexport const prepend = <T>(array: T[], item: T): T[] => [item].concat(array);\n","import {\n  ApplicationState,\n  Board,\n  BoardsContainer,\n  Column\n} from \"../infrastructure/types\";\nimport { Action, ACTIONS } from \"./actions\";\nimport { handleDnd } from \"../infrastructure/operations\";\nimport { initialState } from \"../infrastructure/state/initialState\";\nimport { createId } from \"../infrastructure/utils\";\nimport { append, prepend } from \"../infrastructure/array\";\nimport {getSelectedBoard} from \"../infrastructure/board.utils\";\n\nexport default (state: ApplicationState, action: Action): ApplicationState => {\n  if (action.type === ACTIONS.RESET) {\n    return initialState();\n  }\n  if (action.type === ACTIONS.REMOVE_COLUMN) {\n    const selectedBoard = getSelectedBoard(state);\n    const columns = {\n      ...selectedBoard.columns\n    };\n    delete columns[action.columnId];\n    const newBoard: Board = {\n      ...selectedBoard,\n      columnOrders: selectedBoard.columnOrders.filter(\n        cc => cc !== action.columnId\n      ),\n      columns: columns\n    };\n    return updateBoard(state, newBoard);\n  }\n  if (action.type === ACTIONS.CREATE_COLUMN) {\n    const selectedBoard = getSelectedBoard(state);\n    const newColumn: Column = {\n      items: [],\n      name: action.columnConfiguration.columnName || \"New Column\",\n      id: action.columnConfiguration.columnId || createId(),\n      type: \"PLAYLIST\"\n    };\n    const orderModifier = action.columnConfiguration.fromStart\n      ? prepend\n      : append;\n    const newBoard: Board = {\n      ...selectedBoard,\n      columnOrders: orderModifier(selectedBoard.columnOrders, newColumn.id)\n    };\n    return updateBoard(state, updateColumnInBoard(newBoard, newColumn));\n  }\n  if (action.type === ACTIONS.DONE_LOADING_PLAYLIST) {\n    //TODO: this will trigger an error if I will select another board while playlist is being loaded\n    return updateColumnInSelectedBoard(state, {\n      id: action.playlistId,\n      items: action.items\n    });\n  }\n  if (action.type === ACTIONS.SEARCH_DONE) {\n    return {\n      ...state,\n      searchResults: action.items\n    };\n  }\n  if (action.type === ACTIONS.SELECT_BOARD) {\n    return {\n      ...state,\n      selectedBoard: action.boardId\n    };\n  }\n  if (action.type === ACTIONS.RENAME_COLUMN) {\n    return updateColumnInSelectedBoard(state, {\n      id: action.columnId,\n      name: action.newName\n    });\n  }\n  if (action.type === ACTIONS.DRAG_END) {\n    return handleDnd(state, action.dropResult);\n  }\n  if (action.type === ACTIONS.CREATE_BOARD) {\n    return {\n      ...state,\n      boardsOrder: state.boardsOrder.concat([action.boardId]),\n      boards: createDefaultBoard(state.boards, action.boardId),\n      selectedBoard: action.boardId\n    };\n  }\n  if (action.type === ACTIONS.RENAME_BOARD) {\n    return updateBoard(state, {\n      ...state.boards[action.boardId],\n      boardName: action.newText\n    });\n  }\n  if (action.type === ACTIONS.REMOVE_BOARD) {\n    const boards = state.boards;\n    //TODO: warning mutation\n    delete boards[action.boardId];\n\n    return {\n      ...state,\n      boardsOrder: state.boardsOrder.filter(b => b !== action.boardId),\n      selectedBoard: selectOtherBoard(\n        state.boardsOrder,\n        state.selectedBoard,\n        action.boardId\n      ),\n      boards\n    };\n  }\n  return state;\n};\n\nconst selectOtherBoard = (\n  boards: string[],\n  selectedBoard: string,\n  boardBeingRemoved: string\n) => {\n  if (selectedBoard !== boardBeingRemoved) return selectedBoard;\n  return boards.filter(b => b !== selectedBoard)[0];\n};\n\n//REDUCER HELPERS (candidates for nested reducers)\n\nconst updateBoard = (state: ApplicationState, board: Board) => ({\n  ...state,\n  boards: {\n    ...state.boards,\n    [board.boardId]: board\n  }\n});\n\nconst updateColumnInBoard = (board: Board, column: Column): Board => ({\n  ...board,\n  columns: {\n    ...board.columns,\n    [column.id]: column\n  }\n});\n\nconst createDefaultBoard = (boards: BoardsContainer, boardId: string) => {\n  const newBoard: Board = JSON.parse(\n    //TODO: Extract into separate function without ugly BOARD_2\n    JSON.stringify(initialState().boards[\"BOARD_2\"])\n  );\n  newBoard.boardName = \"New Board\";\n  newBoard.boardId = boardId;\n  return {\n    ...boards,\n    [boardId]: newBoard\n  };\n};\n\ntype PartialColumnWithId = Partial<Column> & { id: string };\nexport const updateColumnInSelectedBoard = (\n  state: ApplicationState,\n  column: PartialColumnWithId\n) => {\n  const selectedBoard = getSelectedBoard(state);\n  return updateBoard(\n    state,\n    updateColumnInBoard(selectedBoard, {\n      ...selectedBoard.columns[column.id],\n      ...column\n    })\n  );\n};\n\n//SELECTOR CANDIDATES\nexport const getColumnsForSelectedBoard = (\n  state: ApplicationState\n): Column[] => {\n  const board = getSelectedBoard(state);\n  if (!board) {\n    return [];\n  }\n  return board.columnOrders.map(id => board.columns[id]);\n};\n","import { Item } from \"./types\";\n\nexport enum ACTIONS {\n  PLAY = \"PLAY\"\n}\n\nexport type Action = PlayAction;\n\nexport interface PlayAction {\n  type: ACTIONS.PLAY;\n  item: Item;\n}\n","import { ApplicationState } from \"../types\";\n\n// @ts-ignore\nexport const initialState = (): ApplicationState => ({\n  boards: {\n    BOARD_1: {\n      boardId: \"BOARD_1\",\n      boardName: \"My Board\",\n      boardOptions: {},\n      columns: {\n        \"1\": {\n          id: \"1\",\n          items: [\n            {\n              text: \"Short name\",\n              id: \"Column1 Video1\",\n              videoId: \"Column1 Video1 YoutubeLink\",\n              imageUrl: \"https://i.ytimg.com/vi/6Zo_FTUNDBI/mqdefault.jpg\",\n              type: \"video\"\n            },\n            {\n              text: \"Short name\",\n              id: \"Column1 Video2\",\n              videoId: \"Column1 Video2 YoutubeLink\",\n              imageUrl: \"https://i.ytimg.com/vi/6Zo_FTUNDBI/mqdefault.jpg\",\n              type: \"video\"\n            }\n          ],\n          name: \"First\",\n          type: \"PLAYLIST\"\n        },\n        \"2\": {\n          id: \"2\",\n          items: [\n            {\n              text: \"Title 2\",\n              id: \"MY_VIDEO_ID\",\n              videoId: \"YOUTUBE_ID\",\n              imageUrl: \"\",\n              type: \"video\"\n            },\n            //@ts-ignore\n            {\n              text: \"Some Playlist\",\n              id: \"MY_PLAYLIST_ID\",\n              playlistId: \"YOUTUBE_PLAYLIST_ID\",\n              imageUrl: \"\",\n              type: \"playlist\"\n            }\n          ],\n          name: \"Second\",\n          type: \"PLAYLIST\"\n        }\n      },\n      columnOrders: [\"1\", \"2\"]\n    },\n    BOARD_2: {\n      boardName: \"ANOTHER BOARd\",\n      boardId: \"BOARD_2\",\n      boardOptions: {},\n      columns: {},\n      columnOrders: []\n    }\n  },\n  boardsOrder: [\"BOARD_1\", \"BOARD_2\"],\n  selectedBoard: \"BOARD_1\",\n  userOptions: {\n    isLeftSidebarVisible: false,\n    leftSidebarContentType: \"search\"\n  },\n  searchResults: [\n    {\n      text: \"Title 2\",\n      id: \"MY_VIDEO_ID_AT_SEARCH\",\n      videoId: \"YOUTUBE_ID_AT_SEARCH\",\n      imageUrl: \"\",\n      type: \"video\"\n    }\n  ],\n  similarState: {\n    items: [\n      {\n        text: \"Title 2\",\n        id: \"MY_VIDEO_ID_AT_SIMILAR\",\n        videoId: \"YOUTUBE_ID_AT_SIMILAR\",\n        imageUrl: \"\",\n        type: \"video\"\n      }\n    ],\n    isLoading: false\n  }\n});\n","import {\n  ApplicationState,\n  Board,\n  BoardOptions,\n  UserOptions\n} from \"../infrastructure/types\";\nimport { Action } from \"./actions\";\nimport {ACTIONS} from \"../board/actions\";\nimport {getSelectedBoard} from \"../infrastructure/board.utils\";\n\nexport default (state: ApplicationState, action: Action): ApplicationState => {\n  const selectedBoard = getSelectedBoard(state);\n\n  if (action.type === \"FIND_SIMILAR_START\") {\n    return updateBoardOptions(state, selectedBoard, { isLoadingSimilar: true });\n  }\n\n  if (action.type === \"TOP_BAR_BUTTON_PRESSED\") {\n    const leftVisible = state.userOptions.isLeftSidebarVisible;\n    const sidebarState = state.userOptions.leftSidebarContentType;\n    const newSidebarState = action.buttonPressedType;\n    if (leftVisible && sidebarState === newSidebarState) {\n      return updateUserOptions(state, { isLeftSidebarVisible: false });\n    } else if (!leftVisible) {\n      return updateUserOptions(state, {\n        isLeftSidebarVisible: true,\n        leftSidebarContentType: newSidebarState\n      });\n    } else {\n      return updateUserOptions(state, {\n        leftSidebarContentType: newSidebarState\n      });\n    }\n  }\n\n  if (action.type === ACTIONS.FIND_SIMILAR_DONE) {\n    return {\n      ...state,\n      similarState:{\n        ...state.similarState,\n        isLoading: false,\n        items: action.items\n      }\n    }\n  }\n  return state;\n};\n\n//REDUCER HELPERS (candidates for nested reducers)\n//TODO: remove duplication\n\nconst updateBoardOptions = (\n  state: ApplicationState,\n  board: Board,\n  options: Partial<BoardOptions>\n) => updateBoard(state, updateOptions(board, options));\n\nconst updateOptions = (\n  board: Board,\n  options: Partial<BoardOptions>\n): Board => ({\n  ...board,\n  boardOptions: {\n    ...board.boardOptions,\n    ...options\n  }\n});\n\nconst updateUserOptions = (\n  state: ApplicationState,\n  options: Partial<UserOptions>\n): ApplicationState => ({\n  ...state,\n  userOptions: {\n    ...state.userOptions,\n    ...options\n  }\n});\n\nconst updateBoard = (state: ApplicationState, board: Board) => ({\n  ...state,\n  boards: {\n    ...state.boards,\n    [board.boardId]: board\n  }\n});\n\n","import { createStore, applyMiddleware, compose, Store } from \"redux\";\nimport boardReducer from \"../../board/reducer\";\nimport playerReducer from \"../../player/reducer\";\nimport menuReducer from \"../../menu/reducer\";\nimport { initialState } from \"./initialState\";\nimport reduceReducers from \"reduce-reducers\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { ApplicationState } from \"../types\"; // defaults to localStorage for web\nimport thunk from \"redux-thunk\";\n\n//even if I provide default state, TS still argues that I need to handle undefined as input within reducer\n// @ts-ignore\nconst rootReducer = reduceReducers(\n  initialState(),\n  boardReducer,\n  playerReducer,\n  menuReducer\n);\nconst composeEnhancers: typeof compose =\n  //@ts-ignore\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst blacklist: (keyof ApplicationState)[] = [\"itemBeingPlayed\"];\n\nexport const persistedReducer = persistReducer(\n  {\n    key: \"MY_CONFIG\",\n    blacklist,\n    storage\n  },\n  rootReducer\n);\n\nexport const createTrelloTubeStore = (): Store<ApplicationState> =>\n  createStore(\n    persistedReducer,\n    composeEnhancers(applyMiddleware(thunk))\n  ) as any;\n\nexport const store = createTrelloTubeStore();\nexport const persistor = persistStore(store);\n","import { ApplicationState } from \"../infrastructure/types\";\nimport { Action, ACTIONS } from \"../infrastructure/actions.types\";\n\nexport default (state: ApplicationState, action: Action): ApplicationState => {\n  //skip all other items, like playlists for now\n  if (action.type === ACTIONS.PLAY && action.item.type === 'video')\n    return {\n      ...state,\n      itemBeingPlayed: action.item\n    };\n  return state;\n};\n","const imageWidthheighRatio = 320 / 180;\nconst imageWidth = 74;\nconst imageHeight = imageWidth / imageWidthheighRatio;\nconst stackWidth = 220;\nconst stackPadding = 8;\nexport default {\n  STACK_WIDTH: stackWidth,\n  STACK_PADDING: stackPadding,\n\n  CARD_IMAGE_WIDTH: imageWidth,\n  CARD_IMAGE_HEIGHT: imageHeight,\n  CARD_HEIGHT: imageHeight,\n  CARD_WIDTH: stackWidth - stackPadding * 2,\n  CARD_TEXT_WIDTH: stackWidth - imageWidth,\n\n  BORDER_RADIUS: 4,\n\n  SIDEBAR_WIDTH: stackWidth + stackPadding * 2,\n\n  TOP_BAR_HEIGHT: 40,\n  PLAYER_HEIGHT: 60,\n\n\n  MAIN_COLOR: '#71797E',\n  MENU_COLOR: 'rgba(0,0,0,0.15)',\n  ACCENT_COLOR: 'lightpink',\n  COLUMN_COLOR: '#E6E7ED',\n};\n","import styled from \"styled-components\";\nimport c from \"../../infrastructure/constants\";\n\nconst Options = styled.div`\n  display: none;\n`;\n\nconst ColumnContainer = styled.div`\n  background-color: ${c.COLUMN_COLOR};\n  margin-left: 8px;\n  border-radius: ${c.BORDER_RADIUS}px;\n  width: ${c.STACK_WIDTH}px;\n  max-height: calc(\n    100vh - ${c.STACK_PADDING * 2}px - ${c.TOP_BAR_HEIGHT}px -\n      ${c.PLAYER_HEIGHT}px\n  );\n  overflow: scroll;\n  display: flex;\n  flex-direction: column;\n  padding-left: ${c.STACK_PADDING}px;\n  padding-right: ${c.STACK_PADDING}px;\n  &:hover ${Options} {\n    display: inherit;\n  }\n`;\n\nconst TaskList = styled.div`\n  flex-grow: 1;\n  min-height: 50px;\n`;\n\nconst BoardContainer = styled.div`\n  display: inline-flex;\n  align-items: flex-start;\n  margin: 8px 8px 8px 8px;\n\n  &:first-of-type {\n    margin-left: 0;\n  }\n`;\nconst Title = styled.h4`\n  margin-bottom: 0;\n  padding-left: ${c.STACK_PADDING}px;\n  padding-bottom: ${c.STACK_PADDING}px;\n\n  display: flex;\n  justify-content: space-between;\n`;\nconst CardButton = styled.button`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  display: none;\n`;\n\nconst CardType = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  font-size: 12px;\n  background-color: black;\n  opacity: 0.6;\n  font-weight: bold;\n  border-bottom-left-radius: ${c.BORDER_RADIUS}px;\n  color: white;\n`;\n\nconst TaskContainer = styled.div<{ isPlaying: boolean }>`\n  position: relative;\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n  border-radius: ${c.BORDER_RADIUS}px;\n  background-color: ${props => (props.isPlaying ? c.ACCENT_COLOR : \"white\")};\n  transition: background-color 400ms;\n  margin-bottom: ${c.STACK_PADDING}px;\n  box-shadow: 0 2px 1px -1px gray;\n  &:hover ${CardButton} {\n    display: inherit;\n  }\n`;\n\nconst Img = styled.img`\n  width: ${c.CARD_IMAGE_WIDTH}px;\n  height: ${c.CARD_IMAGE_HEIGHT}px;\n  border-top-left-radius: ${c.BORDER_RADIUS}px;\n  border-bottom-left-radius: ${c.BORDER_RADIUS}px;\n`;\n\nconst Subtext = styled.div`\n  color: #1e1e1e;\n  font-size: 14px;\n\n  display: flex;\n  align-items: center;\n  padding-left: ${c.STACK_PADDING}px;\n  width: ${c.CARD_TEXT_WIDTH}px;\n  height: ${c.CARD_HEIGHT}px;\n`;\n\nexport {\n  BoardContainer,\n  Title,\n  TaskList,\n  ColumnContainer,\n  Options,\n  Subtext,\n  Img,\n  TaskContainer,\n  CardButton,\n  CardType\n};\n","import { Item } from \"./types\";\nimport { ACTIONS, PlayAction } from \"./actions.types\";\n\nexport const play = (item: Item): PlayAction => ({\n  type: ACTIONS.PLAY,\n  item\n});\n","import {ApplicationState, Item, PlaylistItem} from \"../infrastructure/types\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport React from \"react\";\nimport {\n  TaskContainer,\n  Img,\n  Subtext,\n  CardButton,\n  CardType\n} from \"./components\";\nimport Truncate from \"react-truncate\";\nimport { connect } from \"react-redux\";\nimport { findSimilar, loadPlaylist } from \"./actions\";\nimport { play } from \"../infrastructure/actions\";\n\ninterface Props {\n  item: Item;\n  index: number;\n  play: (item: Item) => void;\n  findSimilar: (videoId: string) => void;\n  loadPlaylist: (item: PlaylistItem) => void;\n  currentItemId?: string;\n}\n\nconst decode = (text: string): string => {\n  const dom = new DOMParser().parseFromString(\n    \"<!doctype html><body>\" + text,\n    \"text/html\"\n  );\n  return dom.body.textContent || \"\";\n};\n\nconst Card = ({\n  item,\n  index,\n  play,\n  findSimilar,\n  loadPlaylist,\n  currentItemId\n}: Props) => {\n  const onFindSimilar = (e: any) => {\n    e.stopPropagation();\n    findSimilar(item.videoId);\n  };\n  const onLoadPlaylist = (e: any, playlist: PlaylistItem) => {\n    e.stopPropagation();\n    loadPlaylist(playlist);\n  };\n\n  return (\n    <Draggable draggableId={item.id} index={index} type=\"item\">\n      {provided => (\n        <TaskContainer\n          title={item.text}\n          isPlaying={currentItemId === item.id}\n          data-testid={\"video-\" + item.id}\n          onClick={() => play(item)}\n          ref={provided.innerRef}\n          {...provided.dragHandleProps}\n          {...provided.draggableProps}\n        >\n          <Img src={item.imageUrl}/>\n          <Subtext>\n            <Truncate width={220 - 74 - 10} lines={2}>\n              {decode(item.text)}\n            </Truncate>\n          </Subtext>\n          <CardType>{item.type === \"video\" ? \"V\" : \"P\"}</CardType>\n          {item.type === \"video\" ? (\n            <CardButton\n              data-testid={\"video-find-similar-\" + item.id}\n              onClick={onFindSimilar}\n            >\n              similar\n            </CardButton>\n          ) : (\n            <CardButton\n              data-testid={\"video-load-playlist-\" + item.id}\n              title=\"This will place playlist at the start of the board\"\n              onClick={e => onLoadPlaylist(e, item)}\n            >\n              load\n            </CardButton>\n          )}\n        </TaskContainer>\n      )}\n    </Draggable>\n  );\n};\n\nconst mapState = (state: ApplicationState) => ({\n  currentItemId: state.itemBeingPlayed && state.itemBeingPlayed.id\n});\n\nexport default connect(\n  mapState,\n  { findSimilar, play, loadPlaylist }\n)(Card);\n","import styled from \"styled-components\";\nimport c from \"../../infrastructure/constants\";\n\ninterface Props {\n  isSelected?: boolean;\n}\n\nexport const BoardOptions = styled.div`\n  position: absolute;\n  left: 0;\n  right: 8px;\n  justify-content: flex-end;\n  display: none;\n`;\n\nexport const BoardItemView = styled.div<Props>`\n  cursor: pointer;\n\n  padding-left: 20px;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  color: ${props => (props.isSelected ? c.ACCENT_COLOR : \"black\")};\n  &:hover {\n    background-color: ${c.ACCENT_COLOR};\n    color: black;\n  }\n  &:hover ${BoardOptions} {\n    display: flex;\n  }\n`;\n\nexport const SidebarVideosContainer = styled.div`\n  padding-left: ${c.STACK_PADDING}px;\n  padding-right: ${c.STACK_PADDING}px;\n`;\n","import { ApplicationState, Item } from \"../infrastructure/types\";\nimport React, { ChangeEvent, useEffect, useState } from \"react\";\nimport { useDebounce } from \"../infrastructure/hooks\";\nimport { searchVideos } from \"../infrastructure/networking/youtube\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport Card from \"../board/Card\";\nimport { SEARCH_DELAY } from \"./constants\";\nimport { connect } from \"react-redux\";\nimport { searchDone } from \"../board/actions\";\nimport { SidebarVideosContainer } from \"./components\";\n\nexport interface SearchProps {\n  items: Item[];\n  searchDone: (items: Item[]) => void;\n}\n\nconst SearchArea = ({ items, searchDone }: SearchProps) => {\n  const [term, setTerm] = useState(\"\");\n  const debounced = useDebounce(term, SEARCH_DELAY);\n  const onSearch = (e: ChangeEvent<HTMLInputElement>) =>\n    setTerm(e.target.value);\n\n  useEffect(() => {\n    if (debounced) {\n      searchVideos(debounced).then(response => searchDone(response.items));\n    }\n  }, [debounced, searchDone]);\n\n  return (\n    <SidebarVideosContainer>\n      <input\n        data-testid=\"search-input\"\n        type=\"text\"\n        value={term}\n        onChange={onSearch}\n      />\n      <Droppable droppableId=\"SEARCH\" type=\"item\">\n        {(provided) => (\n          <div ref={provided.innerRef} {...provided.droppableProps}>\n            {items.map((i, index) => (\n              <Card key={i.id} index={index} item={i} />\n            ))}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </SidebarVideosContainer>\n  );\n};\nconst mapState = (state: ApplicationState) => ({\n  items: state.searchResults\n});\nexport default connect(\n  mapState,\n  { searchDone }\n)(SearchArea);\n","import {useEffect, useState} from \"react\";\n\nexport function useDebounce(value: any, delay: number) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n","export const SEARCH_DELAY = 600;\n","import React, { KeyboardEvent, useState } from \"react\";\ninterface Props {\n  dragHandleProps: {} | null;\n  label: string;\n  id: string;\n  testIdGroupName: string;\n  onRename: (columnId: string, newLabel: string) => void;\n  onRemove: (columnId: string) => void;\n  Title: any;\n  Options: any;\n}\nconst EditableTitle = ({\n  id,\n  label,\n  onRename,\n  onRemove,\n  dragHandleProps,\n  testIdGroupName,\n  Title,\n  Options\n}: Props) => {\n  const [isRenaming, setIsRenaming] = useState(false);\n  const [newText, setNewText] = useState(label);\n\n  const onEditButtonPress = (e: any) => {\n    e.stopPropagation();\n    if (isRenaming) {\n      onRename(id, newText);\n    }\n    setIsRenaming(!isRenaming);\n  };\n\n  const onBlur = () => {\n    setIsRenaming(false);\n    onRename(id, newText);\n  };\n\n  const keyPress = ({ key }: KeyboardEvent<HTMLInputElement>) =>\n    key === \"Enter\" && onBlur();\n\n  const onRemoveClick = (e: any) => {\n    e.stopPropagation();\n    onRemove(id);\n  };\n\n  return (\n    <Title {...dragHandleProps} data-testid={`${testIdGroupName}-` + id}>\n      {isRenaming ? (\n        <input\n          autoFocus\n          onKeyPress={keyPress}\n          onBlur={onBlur}\n          type=\"text\"\n          value={newText}\n          data-testid={`${testIdGroupName}-input-` + id}\n          onChange={e => setNewText(e.target.value)}\n        />\n      ) : (\n        <div data-testid={`${testIdGroupName}-title-` + id}>{label}</div>\n      )}\n      <Options>\n        <button\n          data-testid={`${testIdGroupName}-rename-` + id}\n          onClick={onEditButtonPress}\n        >\n          E\n        </button>\n        <button\n          data-testid={`${testIdGroupName}-remove-` + id}\n          onClick={onRemoveClick}\n        >\n          X\n        </button>\n      </Options>\n    </Title>\n  );\n};\n\nexport default EditableTitle;\n","import { ApplicationState } from \"../infrastructure/types\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  selectBoard,\n  createAndSelectNewBoard,\n  renameBoard,\n  removeBoard\n} from \"../board/actions\";\nimport { BoardItemView, BoardOptions } from \"./components\";\nimport EditableTitle from \"../infrastructure/components/EditableTitle\";\n\ninterface Props {\n  app: ApplicationState;\n  selectBoard: (boardId: string) => void;\n  createAndSelectNewBoard: () => void;\n  renameBoard: (boardId: string, boardName: string) => void;\n  removeBoard: (boardId: string) => void;\n}\n\nconst BoardsSidebar = ({\n  app,\n  selectBoard,\n  createAndSelectNewBoard,\n  renameBoard,\n  removeBoard\n}: Props) => (\n  <div data-testid=\"board-view\">\n    {app.boardsOrder.map(boardId => (\n      <EditableTitle\n        //TODO fix performance problem here\n        dragHandleProps={{\n          isSelected: boardId === app.selectedBoard,\n          onClick: () => selectBoard(boardId)\n        }}\n        id={boardId}\n        key={boardId}\n        testIdGroupName=\"board-button\"\n        label={app.boards[boardId].boardName}\n        onRename={renameBoard}\n        onRemove={removeBoard}\n        Title={BoardItemView}\n        Options={BoardOptions}\n      />\n    ))}\n    <button data-testid=\"create-board-button\" onClick={createAndSelectNewBoard}>\n      create\n    </button>\n  </div>\n);\n\nconst mapState = (state: ApplicationState) => ({\n  app: state\n});\n\nexport default connect(\n  mapState,\n  { selectBoard, createAndSelectNewBoard, renameBoard, removeBoard }\n)(BoardsSidebar);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { ApplicationState, Item } from \"../infrastructure/types\";\nimport Card from \"../board/Card\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport { SidebarVideosContainer } from \"./components\";\n\ninterface Props {\n  isLoading?: boolean;\n  items: Item[];\n}\nconst SimilarSidebar = ({ items, isLoading }: Props) => {\n  return (\n    <>\n      <h2>Similar</h2>\n\n      {isLoading && <h5>Loading...</h5>}\n\n      <SidebarVideosContainer>\n        {!isLoading && items && (\n          <Droppable droppableId=\"SIMILAR\" type=\"item\">\n            {provided => (\n              <div ref={provided.innerRef} {...provided.droppableProps}>\n                {items.map((i, index) => (\n                  <Card key={i.id} index={index} item={i} />\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        )}\n      </SidebarVideosContainer>\n    </>\n  );\n};\n\nconst mapState = (state: ApplicationState) => {\n  return {\n    items: state.similarState.items,\n    isLoading: state.similarState.isLoading\n  };\n};\n\nexport default connect(mapState)(SimilarSidebar);\n","import React from \"react\";\nimport SearchArea from \"./SearchSidebar\";\nimport BoardsSidebar from \"./BoardsSidebar\";\nimport SimilarSidebar from \"./SimilarSidebar\";\nimport { SidebarState } from \"../infrastructure/types\";\n\nconst Sidebar = ({ state }: { state: SidebarState }): JSX.Element => {\n  if (state === \"search\") {\n    return <SearchArea />;\n  } else if (state === \"board\") {\n    return <BoardsSidebar />;\n  } else return <SimilarSidebar />;\n};\n\nexport default Sidebar;\n","import React, { useState } from \"react\";\nimport Youtube from \"react-youtube\";\nimport { ApplicationState, Item } from \"../infrastructure/types\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport c from \"../infrastructure/constants\";\nimport { getNextItem, getPreviousItem } from \"../infrastructure/array\";\nimport { getItemsFor } from \"../infrastructure/board.utils\";\nimport { play } from \"../infrastructure/actions\";\n\ninterface Props {\n  videoId?: string;\n  nextItem?: Item;\n  prevItem?: Item;\n  play: (item: Item) => void;\n}\nconst BottomBar = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: ${c.PLAYER_HEIGHT}px;\n  background-color: ${c.MENU_COLOR};\n`;\n\nconst Player = ({ videoId, nextItem, prevItem, play }: Props) => {\n  const [, setPlayer] = useState();\n\n  return (\n    <BottomBar>\n      <button\n        disabled={!prevItem}\n        data-testid=\"player-play-prev\"\n        onClick={() => prevItem && play(prevItem)}\n      >\n        previous\n      </button>\n      <button\n        disabled={!nextItem}\n        data-testid=\"player-play-next\"\n        onClick={() => nextItem && play(nextItem)}\n      >\n        next\n      </button>\n      {videoId && (\n        <YoutubePlayerWrapper\n          onEnd={() => nextItem && play(nextItem)}\n          onReady={setPlayer}\n          videoId={videoId}\n        />\n      )}\n    </BottomBar>\n  );\n};\n\nconst YoutubePlayerWrapper = (props: any) => (\n  <div style={style}>\n    <Youtube\n      {...props}\n      onReady={e => props.onReady(e.target)}\n      opts={{\n        height: \"150\",\n        width: \"400\",\n        playerVars: {\n          // https://developers.google.com/youtube/player_parameters\n          autoplay: 1\n        }\n      }}\n    />\n  </div>\n);\n\nconst style = {\n  position: \"fixed\",\n  right: 15,\n  bottom: 15 + 60\n} as {};\n\nconst mapState = (state: ApplicationState) => {\n  const videoId = state.itemBeingPlayed && state.itemBeingPlayed.videoId;\n\n  return {\n    videoId: videoId,\n    nextItem: getNextPlayItem(state),\n    prevItem: getPrevPlayItem(state)\n  };\n};\n\nconst getNextPlayItem = (state: ApplicationState): Item | undefined => {\n  const itemId = state.itemBeingPlayed && state.itemBeingPlayed.id;\n  if (itemId) {\n    return getNextItem(\n      getItemsFor(state, getColumnIdForVideo(state, itemId)),\n      item => item.id === itemId\n    );\n  }\n};\n\nconst getPrevPlayItem = (state: ApplicationState): Item | undefined => {\n  const itemId = state.itemBeingPlayed && state.itemBeingPlayed.id;\n  if (itemId) {\n    return getPreviousItem(\n      getItemsFor(state, getColumnIdForVideo(state, itemId)),\n      item => item.id === itemId\n    );\n  }\n};\n\n//WARNING: this might get triggered on each state update while\n//having a big complexity. Consider using reselect here for memo\nconst getColumnIdForVideo = (\n  state: ApplicationState,\n  itemId: string\n): string => {\n  if (state.searchResults.find(c => c.id === itemId)) return \"SEARCH\";\n  if (state.similarState && state.similarState.items.find(c => c.id === itemId))\n    return \"SIMILAR\";\n\n  const boardId = state.boardsOrder.find(id =>\n    state.boards[id].columnOrders.find(colId =>\n      state.boards[id].columns[colId].items.find(item => item.id === itemId)\n    )\n  );\n  const board = state.boards[boardId as string];\n  const column = board && board.columnOrders.find(column =>\n    board.columns[column].items.find(item => item.id === itemId)\n  );\n  if (!column) return \"\";\n  return column;\n};\n\nexport default connect(\n  mapState,\n  { play }\n)(Player);\n","import React from \"react\";\nimport { Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { Column } from \"../infrastructure/types\";\nimport Card from \"./Card\";\nimport { connect } from \"react-redux\";\nimport { ColumnContainer, TaskList, Title, Options } from \"./components\";\nimport EditableTitle from \"../infrastructure/components/EditableTitle\";\nimport { removeColumn, renameColumn } from \"./actions\";\n\ninterface Props {\n  column: Column;\n  index: number;\n  renameColumn: (columnId: string, newLabel: string) => void;\n  removeColumn: (columnId: string) => void;\n}\n\nconst ColumnView = ({ column, index, removeColumn, renameColumn }: Props) => {\n  return (\n    <Draggable draggableId={column.id} index={index}>\n      {columnProvided => (\n        <ColumnContainer\n          data-testid={\"column-\" + column.id}\n          ref={columnProvided.innerRef}\n          {...columnProvided.draggableProps}\n        >\n          <EditableTitle\n            dragHandleProps={columnProvided.dragHandleProps}\n            label={column.name}\n            id={column.id}\n            onRename={renameColumn}\n            onRemove={removeColumn}\n            testIdGroupName={\"column-label\"}\n            Title={Title}\n            Options={Options}\n          />\n          <Droppable droppableId={column.id} type=\"item\">\n            {(provided) => (\n              <TaskList ref={provided.innerRef} {...provided.droppableProps}>\n                {column.items.map((item, index) => (\n                  <Card index={index} key={item.id} item={item} />\n                ))}\n                {provided.placeholder}\n              </TaskList>\n            )}\n          </Droppable>\n        </ColumnContainer>\n      )}\n    </Draggable>\n  );\n};\n\nexport default connect(\n  null,\n  { renameColumn, removeColumn }\n)(ColumnView);\n","import React from \"react\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport ColumnView from \"./Column\";\nimport { ApplicationState, Column } from \"../infrastructure/types\";\nimport { connect } from \"react-redux\";\nimport { createColumn, selectBoard } from \"./actions\";\nimport { getColumnsForSelectedBoard } from \"./reducer\";\nimport { BoardContainer } from \"./components\";\n\ninterface Props {\n  createColumn: any;\n  columns: Column[];\n}\n\nconst App = ({ createColumn, columns }: Props) => {\n  return (\n    <Droppable droppableId=\"board\" direction={\"horizontal\"} type=\"column\">\n      {provided => (\n        <BoardContainer ref={provided.innerRef} {...provided.droppableProps}>\n          {columns.map((column, index) => (\n            <ColumnView key={column.id} column={column} index={index} />\n          ))}\n          {provided.placeholder}\n          <button data-testid=\"column-create\" onClick={createColumn}>\n            + Playlist\n          </button>\n        </BoardContainer>\n      )}\n    </Droppable>\n  );\n};\n\nconst mapState = (state: ApplicationState) => ({\n  columns: getColumnsForSelectedBoard(state)\n});\nexport default connect(\n  mapState,\n  {\n    createColumn,\n    selectBoard\n  }\n)(App);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport AppSidebar from \"./menu/Sidebar\";\nimport Player from \"./player/Player\";\nimport Board from \"./board\";\nimport { DragDropContext, DropResult } from \"react-beautiful-dnd\";\nimport { connect } from \"react-redux\";\nimport { endDrag } from \"./board/actions\";\nimport c from \"./infrastructure/constants\";\nimport {\n  ApplicationState,\n  SidebarState,\n  UserOptions\n} from \"./infrastructure/types\";\nimport { topBarButtonPressed } from \"./menu/actions\";\nimport { persistor } from \"./infrastructure/state/store\";\nconst Container = styled.div`\n  background-color: ${c.MAIN_COLOR};\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  max-height: 100vh;\n  align-items: stretch;\n`;\n\nconst TopBar = styled.div`\n  min-height: ${c.TOP_BAR_HEIGHT}px;\n  background-color: ${c.MENU_COLOR};\n`;\n\nconst MainContainer = styled.div`\n  display: flex;\n  flex: 1;\n  overflow: scroll;\n`;\n\ninterface VisibilityProps {\n  isVisible: boolean;\n}\n\nconst Sidebar = styled.div<VisibilityProps>`\n  width: ${props => (props.isVisible ? c.SIDEBAR_WIDTH : 0)}px;\n  transition: width 200ms;\n  overflow: scroll;\n`;\n\nconst LeftSidebar = styled(Sidebar)`\n  position: relative;\n  background-color: ${c.MENU_COLOR};\n`;\n\nconst RightSidebar = styled(Sidebar)`\n  background-color: ${c.MENU_COLOR};\n`;\n\nconst MainContent = styled.div`\n  overflow: scroll;\n  flex: 1;\n`;\n\ninterface Props {\n  endDrag: (result: DropResult) => void;\n  topBarButtonPressed: (state: SidebarState) => void;\n  options: UserOptions;\n}\n\nconst App = ({ endDrag, topBarButtonPressed, options }: Props) => (\n  <DragDropContext onDragEnd={endDrag}>\n    <Container>\n      <TopBar>\n        TopBar\n        <button\n          data-testid=\"boards-button\"\n          onClick={() => topBarButtonPressed(\"board\")}\n        >\n          boards\n        </button>\n        <button\n          data-testid=\"search-button\"\n          onClick={() => topBarButtonPressed(\"search\")}\n        >\n          search\n        </button>\n        <button\n          data-testid=\"similar-button\"\n          onClick={() => topBarButtonPressed(\"similar\")}\n        >\n          similar\n        </button>\n        <button style={{float:'right'}} onClick={() => persistor.purge()}>clear-store</button>\n      </TopBar>\n      <MainContainer>\n        <LeftSidebar isVisible={options.isLeftSidebarVisible}>\n          <AppSidebar state={options.leftSidebarContentType} />\n        </LeftSidebar>\n        <MainContent>\n          <Board />\n        </MainContent>\n        <RightSidebar isVisible={false}>Right Sidebar</RightSidebar>\n      </MainContainer>\n      <Player />\n    </Container>\n  </DragDropContext>\n);\n\nconst mapState = (state: ApplicationState) => ({\n  options: state.userOptions\n});\n\nexport default connect(\n  mapState,\n  { endDrag, topBarButtonPressed }\n)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { store } from \"./infrastructure/state/store\";\nimport { Provider } from \"react-redux\";\nimport App from \"./AppLayout\";\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}