{"version":3,"sources":["board/components/constants.ts","board/components/index.ts","player/actions.ts","board/Card.tsx","board/actions.ts","shared/EditableTitle.tsx","board/Column.tsx","api/youtube.ts","keys.ts","menu/components/index.ts","menu/SearchSidebar.tsx","hooks.ts","menu/constants.ts","menu/BoardsSidebar.tsx","menu/Sidebar.tsx","player/Player.tsx","operations.ts","state.ts","board/reducer.ts","board/index.tsx","serviceWorker.ts","player/reducer.ts","store.ts","index.tsx"],"names":["STACK_WIDTH","STACK_PADDING","CARD_IMAGE_WIDTH","CARD_IMAGE_HEIGHT","imageWidth","CARD_HEIGHT","CARD_WIDTH","stackWidth","CARD_TEXT_WIDTH","BORDER_RADIUS","SIDEBAR_WIDTH","ACTIONS","Options","styled","div","ColumnContainer","c","TaskList","props","isDraggingOver","BoardContainer","Title","h4","TaskContainer","Img","img","Subtext","Task","item","index","onPress","draggableId","id","type","provided","data-testid","onClick","ref","innerRef","dragHandleProps","draggableProps","src","imageUrl","Truncate","width","lines","text","DOMParser","parseFromString","body","textContent","play","videoId","PLAY","EditableTitle","label","onRename","onRemove","testIdGroupName","useState","isRenaming","setIsRenaming","newText","setNewText","onBlur","autoFocus","onKeyPress","key","value","onChange","e","target","stopPropagation","selectBoard","boardId","SELECT_BOARD","connect","renameColumn","columnId","newName","RENAME_COLUMN","removeColumn","REMOVE_COLUMN","column","columnProvided","name","droppableId","snapshot","droppableProps","items","map","Card","placeholder","logRequest","term","requestType","console","log","isItemSupported","itemKind","defaultProps","parseProps","allProps","Object","keys","filter","join","url","verb","BoardOptions","BoardItemView","isSelected","SidebarContainer","SidebarVideosContainer","state","boards","selectedBoard","columns","searchDone","SEARCH_DONE","setTerm","debounced","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","pageToken","fetch","part","shart","maxResults","q","then","response","json","data","kind","snippet","thumbnails","medium","title","Math","random","searchVideos","i","app","createAndSelectNewBoard","newID","CREATE_BOARD","renameBoard","boardName","RENAME_BOARD","removeBoard","REMOVE_BOARD","boardsOrder","Sidebar","setState","YoutubePlayerWrapper","style","onReady","onEnd","opts","height","playerVars","autoplay","position","right","bottom","videoBeingPlayed","setPlayer","getColumn","board","getItemBeingDragged","source","removeItemFromBoard","itemIndex","splice","updateItemInColumn","insertIntoColumn","_id","initialState","BOARD_1","SEARCH","columnOrders","BOARD_2","selectOtherBoard","boardBeingRemoved","b","updateBoard","createDefaultBoard","newBoard","JSON","parse","stringify","getSelectedBoard","getColumnsForSelectedBoard","createColumn","CREATE_COLUMN","endDrag","dropResult","DRAG_END","onDragEnd","direction","Column","Boolean","window","location","hostname","match","rootReducer","reduceReducers","action","RESET","cc","newColumn","concat","result","destination","oldItem","without","handleDnd","persistConfig","storage","persistedReducer","persistReducer","store","createStore","persistStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dd296f3f.chunk.js","sourcesContent":["const imageWidthheighRatio = 320 / 180;\nconst imageWidth = 74;\nconst imageHeight = imageWidth / imageWidthheighRatio;\nconst stackWidth = 220;\nconst stackPadding = 8;\nexport default {\n  STACK_WIDTH: stackWidth,\n  STACK_PADDING: stackPadding,\n\n  CARD_IMAGE_WIDTH: imageWidth,\n  CARD_IMAGE_HEIGHT: imageHeight,\n  CARD_HEIGHT: imageHeight,\n  CARD_WIDTH: stackWidth - stackPadding * 2,\n  CARD_TEXT_WIDTH: stackWidth - imageWidth,\n\n  BORDER_RADIUS: 4,\n\n  SIDEBAR_WIDTH: stackWidth + stackPadding * 2\n};\n","import styled from \"styled-components\";\nimport c from './constants';\n\nconst Options = styled.div`\n  display: none;\n`;\n\nconst ColumnContainer = styled.div`\n  background-color: lightgrey;\n  margin-left: 8px;\n  border-radius: ${c.BORDER_RADIUS}px;\n  width: ${c.STACK_WIDTH}px;\n  display: flex;\n  flex-direction: column;\n  padding-left: ${c.STACK_PADDING}px;\n  padding-right: ${c.STACK_PADDING}px;\n  &:hover ${Options} {\n    display: inherit;\n  }\n`;\n\nconst TaskList = styled.div<any>`\n  background-color: ${(props: any) =>\n    props.isDraggingOver ? \"lightgrey\" : \"lightgrey\"};\n  flex-grow: 1;\n  min-height: 50px;\n`;\n\nconst BoardContainer = styled.div`\n  display: inline-flex;\n  align-items: flex-start;\n  //to balance for margin-left of the rightmost item\n  margin: 8px 8px 8px ${c.SIDEBAR_WIDTH}px;\n`;\nconst Title = styled.h4`\n  margin-bottom: 0;\n  padding-left: ${c.STACK_PADDING}px;\n  padding-bottom: ${c.STACK_PADDING}px;\n\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst TaskContainer = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n  border-radius: ${c.BORDER_RADIUS}px;\n  background-color: white;\n  margin-bottom: ${c.STACK_PADDING}px;\n  box-shadow: 0 2px 1px -1px gray;\n`;\n\nconst Img = styled.img`\n  width: ${c.CARD_IMAGE_WIDTH}px;\n  height: ${c.CARD_IMAGE_HEIGHT}px;\n  border-top-left-radius: ${c.BORDER_RADIUS}px;\n  border-bottom-left-radius: ${c.BORDER_RADIUS}px;\n`;\n\nconst Subtext = styled.div`\n  color: #1e1e1e;\n  font-size: 14px;\n  \n  display: flex;\n  align-items: center;\n  padding-left: ${c.STACK_PADDING}px;\n  width: ${c.CARD_TEXT_WIDTH}px;\n  height: ${c.CARD_HEIGHT}px;\n`;\n\nexport {\n  BoardContainer,\n  Title,\n  TaskList,\n  ColumnContainer,\n  Options,\n  Subtext,\n  Img,\n  TaskContainer\n};\n","export enum ACTIONS {\n  PLAY = \"PLAY\"\n}\n\nexport type Action = PlayAction;\n\ninterface PlayAction {\n  type: ACTIONS.PLAY;\n  videoId: string;\n}\n\nexport const play = (videoId: string): PlayAction => ({\n  type: ACTIONS.PLAY,\n  videoId\n});\n","import { Item } from \"../types\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport React from \"react\";\nimport { TaskContainer, Img, Subtext } from \"./components\";\nimport Truncate from \"react-truncate\";\n\ninterface Props {\n  item: Item;\n  index: number;\n  onPress: () => void;\n}\n\nconst decode = (text: string): string => {\n  const dom = new DOMParser().parseFromString(\n    \"<!doctype html><body>\" + text,\n    \"text/html\"\n  );\n  return dom.body.textContent || \"\";\n};\n\nconst Task = ({ item, index, onPress }: Props) => (\n  <Draggable draggableId={item.id} index={index} type=\"item\">\n    {provided => (\n      <TaskContainer\n        data-testid={\"video-\" + item.id}\n        onClick={onPress}\n        ref={provided.innerRef}\n        {...provided.dragHandleProps}\n        {...provided.draggableProps}\n      >\n        <Img src={item.imageUrl}></Img>\n        <Subtext>\n          <Truncate width={220 - 74 - 10} lines={2}>\n            {decode(item.text)}\n          </Truncate>\n        </Subtext>\n      </TaskContainer>\n    )}\n  </Draggable>\n);\n\nexport default Task;\n","import { Item } from \"../types\";\nimport { DropResult } from \"react-beautiful-dnd\";\n\nexport enum ACTIONS {\n  REMOVE_COLUMN = \"REMOVE_COLUMN\",\n  CREATE_COLUMN = \"CREATE_COLUMN\",\n  SEARCH_DONE = \"SEARCH_DONE\",\n  SELECT_BOARD = \"SELECT_BOARD\",\n  RENAME_COLUMN = \"RENAME_COLUMN\",\n  DRAG_END = \"DRAG_END\",\n  CREATE_BOARD = \"CREATE_BOARD\",\n  REMOVE_BOARD = \"REMOVE_BOARD\",\n  RENAME_BOARD = \"RENAME_BOARD\",\n  RESET = \"RESET\"\n}\n\nexport interface RemoveAction {\n  type: ACTIONS.REMOVE_COLUMN;\n  columnId: string;\n}\n\nexport interface RenameColumn {\n  type: ACTIONS.RENAME_COLUMN;\n  columnId: string;\n  newName: string;\n}\n\nexport interface SelectBoard {\n  type: ACTIONS.SELECT_BOARD;\n  boardId: string;\n}\n\nexport interface CreateColumnAction {\n  type: ACTIONS.CREATE_COLUMN;\n}\n\nexport interface SearchDone {\n  type: ACTIONS.SEARCH_DONE;\n  items: Item[];\n}\n\nexport interface EndDrag {\n  type: ACTIONS.DRAG_END;\n  dropResult: DropResult;\n}\n\nexport interface CreateBoard {\n  type: ACTIONS.CREATE_BOARD;\n  boardId: string;\n}\nexport interface RenameBoard {\n  type: ACTIONS.RENAME_BOARD;\n  boardId: string;\n  newText: string;\n}\nexport interface RemoveBoard {\n  type: ACTIONS.REMOVE_BOARD;\n  boardId: string;\n}\nexport interface Reset {\n  type: ACTIONS.RESET;\n}\n\nexport type Action =\n  | RemoveAction\n  | CreateColumnAction\n  | SelectBoard\n  | RenameColumn\n  | EndDrag\n  | CreateBoard\n  | RenameBoard\n  | RemoveBoard\n  | Reset\n  | SearchDone;\n\nexport const removeColumn = (columnId: string) => ({\n  type: ACTIONS.REMOVE_COLUMN,\n  columnId\n});\n\nexport const searchDone = (items: Item[]) => ({\n  type: ACTIONS.SEARCH_DONE,\n  items\n});\n\nexport const createColumn = () => ({\n  type: ACTIONS.CREATE_COLUMN\n});\n\nexport const selectBoard = (boardId: string) => ({\n  type: ACTIONS.SELECT_BOARD,\n  boardId\n});\n\nexport const renameColumn = (columnId: string, newName: string) => ({\n  type: ACTIONS.RENAME_COLUMN,\n  columnId,\n  newName\n});\n\nexport const createAndSelectNewBoard = (): CreateBoard => {\n  const newID = Math.random() + \"\";\n  return {\n    type: ACTIONS.CREATE_BOARD,\n    boardId: newID\n  };\n};\n\nexport const endDrag = (dropResult: DropResult): EndDrag => ({\n  type: ACTIONS.DRAG_END,\n  dropResult\n});\n\nexport const renameBoard = (\n  boardId: string,\n  boardName: string\n): RenameBoard => ({\n  type: ACTIONS.RENAME_BOARD,\n  boardId,\n  newText: boardName\n});\n\nexport const removeBoard = (boardId: string): RemoveBoard => ({\n  type: ACTIONS.REMOVE_BOARD,\n  boardId\n});\n\nexport const reset = (): Reset => ({\n  type: ACTIONS.RESET\n});\n","import React, { KeyboardEvent, useEffect, useState } from \"react\";\ninterface Props {\n  dragHandleProps: {} | null;\n  label: string;\n  id: string;\n  testIdGroupName: string;\n  onRename: (columnId: string, newLabel: string) => void;\n  onRemove: (columnId: string) => void;\n  Title: any;\n  Options: any;\n}\nconst EditableTitle = ({\n  id,\n  label,\n  onRename,\n  onRemove,\n  dragHandleProps,\n  testIdGroupName,\n  Title,\n  Options\n}: Props) => {\n  const [isRenaming, setIsRenaming] = useState(false);\n  const [newText, setNewText] = useState(label);\n\n  const onEditButtonPress = (e: any) => {\n    e.stopPropagation();\n    if (isRenaming) {\n      onRename(id, newText);\n    }\n    setIsRenaming(!isRenaming);\n  };\n\n  const onBlur = () => {\n    setIsRenaming(false);\n    onRename(id, newText);\n  };\n\n  const keyPress = ({ key }: KeyboardEvent<HTMLInputElement>) =>\n    key === \"Enter\" && onBlur();\n\n  const onRemoveClick = (e: any) => {\n    e.stopPropagation();\n    onRemove(id);\n  };\n\n  return (\n    <Title {...dragHandleProps} data-testid={`${testIdGroupName}-` + id}>\n      {isRenaming ? (\n        <input\n          autoFocus\n          onKeyPress={keyPress}\n          onBlur={onBlur}\n          type=\"text\"\n          value={newText}\n          data-testid={`${testIdGroupName}-input-` + id}\n          onChange={e => setNewText(e.target.value)}\n        />\n      ) : (\n        <div data-testid={`${testIdGroupName}-title-` + id}>{label}</div>\n      )}\n      <Options>\n        <button\n          data-testid={`${testIdGroupName}-rename-` + id}\n          onClick={onEditButtonPress}\n        >\n          E\n        </button>\n        <button\n          data-testid={`${testIdGroupName}-remove-` + id}\n          onClick={onRemoveClick}\n        >\n          X\n        </button>\n      </Options>\n    </Title>\n  );\n};\n\nexport default EditableTitle;\n","import React from \"react\";\nimport { Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { Column } from \"../types\";\nimport Card from \"./Card\";\nimport { play } from \"../player/actions\";\nimport { connect } from \"react-redux\";\nimport {ColumnContainer, TaskList, Title, Options} from \"./components\";\nimport EditableTitle from \"../shared/EditableTitle\";\nimport { removeColumn, renameColumn } from \"./actions\";\n\ninterface Props {\n  column: Column;\n  index: number;\n  play: (youtubeId: string) => void;\n  renameColumn: (columnId: string, newLabel: string) => void;\n  removeColumn: (columnId: string) => void;\n}\n\nconst ColumnView = ({\n  column,\n  index,\n  play,\n  removeColumn,\n  renameColumn\n}: Props) => {\n  return (\n    <Draggable draggableId={column.id} index={index}>\n      {columnProvided => (\n        <ColumnContainer\n          data-testid={\"column-\" + column.id}\n          ref={columnProvided.innerRef}\n          {...columnProvided.draggableProps}\n        >\n          <EditableTitle\n            dragHandleProps={columnProvided.dragHandleProps}\n            label={column.name}\n            id={column.id}\n            onRename={renameColumn}\n            onRemove={removeColumn}\n            testIdGroupName={\"column-label\"}\n            Title={Title}\n            Options={Options}\n          />\n          <Droppable droppableId={column.id} type=\"item\">\n            {(provided, snapshot) => (\n              <TaskList\n                isDraggingOver={snapshot.isDraggingOver}\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n              >\n                {column.items.map((item, index) => (\n                  <Card\n                    onPress={() => play(item.videoId)}\n                    index={index}\n                    key={item.id}\n                    item={item}\n                  />\n                ))}\n                {provided.placeholder}\n              </TaskList>\n            )}\n          </Droppable>\n        </ColumnContainer>\n      )}\n    </Draggable>\n  );\n};\n\nexport default connect(\n  null,\n  { play, renameColumn, removeColumn }\n)(ColumnView);\n","import {YOUTUBE_KEY} from \"../keys\";\nimport {ItemKind, YoutubeSearchResponse} from \"./types\";\nimport {Item} from \"../types\";\n\ninterface ResponseType {\n  items: Item[];\n}\n\nexport const searchVideos = (\n  term: string,\n  pageToken?: string\n): Promise<ResponseType> =>\n  fetch(\n    url(\"search\", {\n      part: \"snippet\",\n      shart: \"mostPopular\",\n      maxResults: 10,\n      pageToken,\n      q: logRequest(term, \"search\")\n    })\n  )\n    .then(response => response.json())\n    .then((data: YoutubeSearchResponse) => ({\n      //TODO: extract duplication\n      // nextPageToken: data.nextPageToken,\n      // totalResults: data.pageInfo.totalResults,\n      items: data.items\n        .filter(item => isItemSupported(item.id.kind))\n        .map(item => ({\n          videoId: item.id.videoId || \"\",\n          imageUrl: item.snippet.thumbnails.medium.url,\n          text: item.snippet.title,\n          id: Math.random() + \"\"\n        }))\n    }));\n\nconst logRequest = (term: string, requestType: string) => {\n  console.log(`Requesting Youtube ${requestType} for ${term}`);\n  return term;\n};\n\nconst isItemSupported = (itemKind: ItemKind): boolean =>\n  itemKind === \"youtube#video\";\n// itemKind === \"youtube#playlist\" ||\n// itemKind === \"youtube#channel\";\n\nconst defaultProps = {\n  key: YOUTUBE_KEY\n};\n\nconst parseProps = (props: any): string => {\n  const allProps = {...props, ...defaultProps};\n  return Object.keys(allProps)\n    .filter(key => typeof allProps[key] !== \"undefined\")\n    .map(key => `${key}=${allProps[key]}`)\n    .join(\"&\");\n};\nconst url = (verb: string, props: {}) =>\n  `https://www.googleapis.com/youtube/v3/${verb}?${parseProps(props)}`;\n","export const YOUTUBE_KEY = \"AIzaSyBsCL-zrXWd9S2FKRSDVfz7dOo783LQkLk\";\n","import styled from \"styled-components\";\nimport c from \"../../board/components/constants\";\n\ninterface Props {\n  isSelected?: boolean;\n}\n\nexport const BoardOptions = styled.div`\n  position: absolute;\n  left: 0;\n  right: 8px;\n  justify-content: flex-end;\n  display: none;\n`;\n\nexport const BoardItemView = styled.div<Props>`\n  cursor: pointer;\n  &:hover {\n    background-color: lightpink;\n  }\n  padding-left: 20px;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  color: ${props => (props.isSelected ? \"purple\" : \"black\")};\n  &:hover ${BoardOptions} {\n    display: flex;\n  }\n`;\n\nexport const SidebarContainer = styled.div`\n  overflow: scroll;\n  position: fixed;\n  width: ${c.SIDEBAR_WIDTH}px;\n  box-sizing: border-box;\n  background-color: lightgrey;\n  top: 0;\n  left: 0;\n  bottom: 0;\n`;\n\nexport const SidebarVideosContainer = styled.div`\n  padding-left: ${c.STACK_PADDING}px;\n  padding-right: ${c.STACK_PADDING}px;\n`\n","import { ApplicationState, Item } from \"../types\";\nimport React, { ChangeEvent, useEffect, useState } from \"react\";\nimport { useDebounce } from \"../hooks\";\nimport { searchVideos } from \"../api/youtube\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport Card from \"../board/Card\";\nimport { SEARCH_DELAY } from \"./constants\";\nimport { connect } from \"react-redux\";\nimport { play } from \"../player/actions\";\nimport { searchDone } from \"../board/actions\";\nimport { SidebarVideosContainer } from \"./components\";\n\nexport interface SearchProps {\n  items: Item[];\n  searchDone: (items: Item[]) => void;\n  play: (youtubeId: string) => void;\n}\n\nconst SearchArea = ({ items, searchDone, play }: SearchProps) => {\n  const [term, setTerm] = useState(\"\");\n  const debounced = useDebounce(term, SEARCH_DELAY);\n  const onSearch = (e: ChangeEvent<HTMLInputElement>) =>\n    setTerm(e.target.value);\n\n  useEffect(() => {\n    if (debounced) {\n      searchVideos(debounced).then(response => searchDone(response.items));\n    }\n  }, [debounced]);\n\n  return (\n    <SidebarVideosContainer>\n      <input\n        data-testid=\"search-input\"\n        type=\"text\"\n        value={term}\n        onChange={onSearch}\n      />\n      <Droppable droppableId=\"SEARCH\" type=\"item\">\n        {(provided, snapshot) => (\n          <div ref={provided.innerRef} {...provided.droppableProps}>\n            {items.map((i, index) => (\n              <Card\n                onPress={() => play(i.videoId)}\n                key={i.id}\n                index={index}\n                item={i}\n              />\n            ))}\n          </div>\n        )}\n      </Droppable>\n    </SidebarVideosContainer>\n  );\n};\nconst mapState = (state: ApplicationState) => ({\n  items: state.boards[state.selectedBoard].columns[\"SEARCH\"].items\n});\nexport default connect(\n  mapState,\n  { play, searchDone }\n)(SearchArea);\n","import {useEffect, useState} from \"react\";\n\nexport function useDebounce(value: any, delay: number) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n","export const SEARCH_DELAY = 600;\n","import { ApplicationState, Board } from \"../types\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  selectBoard,\n  createAndSelectNewBoard,\n  renameBoard,\n  removeBoard\n} from \"../board/actions\";\nimport { BoardItemView, BoardOptions } from \"./components\";\nimport EditableTitle from \"../shared/EditableTitle\";\n\ninterface Props {\n  app: ApplicationState;\n  selectBoard: (boardId: string) => void;\n  createAndSelectNewBoard: () => void;\n  renameBoard: (boardId: string, boardName: string) => void;\n  removeBoard: (boardId: string) => void;\n}\n\nconst BoardsSidebar = ({\n  app,\n  selectBoard,\n  createAndSelectNewBoard,\n  renameBoard,\n  removeBoard\n}: Props) => (\n  <div data-testid=\"board-view\">\n    {app.boardsOrder.map(boardId => (\n      <EditableTitle\n        //TODO fix performance problem here\n        dragHandleProps={{\n          isSelected: boardId === app.selectedBoard,\n          onClick: () => selectBoard(boardId)\n        }}\n        id={boardId}\n        key={boardId}\n        testIdGroupName=\"board-button\"\n        label={app.boards[boardId].boardName}\n        onRename={renameBoard}\n        onRemove={removeBoard}\n        Title={BoardItemView}\n        Options={BoardOptions}\n      />\n    ))}\n    <button data-testid=\"create-board-button\" onClick={createAndSelectNewBoard}>\n      create\n    </button>\n  </div>\n);\n\nconst mapState = (state: ApplicationState) => ({\n  app: state\n});\n\nexport default connect(\n  mapState,\n  { selectBoard, createAndSelectNewBoard, renameBoard, removeBoard }\n)(BoardsSidebar);\n","import React, {useState} from \"react\";\nimport SearchArea from \"./SearchSidebar\";\nimport BoardsSidebar from \"./BoardsSidebar\";\nimport {SidebarContainer} from \"./components\";\n\ntype SidebarState = \"search\" | \"board\";\n\nconst Sidebar = () => {\n  const [state, setState] = useState<SidebarState>(\"search\");\n  return (\n    <SidebarContainer>\n      <button data-testid=\"boards-button\" onClick={() => setState(\"board\")}>\n        boards\n      </button>\n      <button data-testid=\"search-button\" onClick={() => setState(\"search\")}>\n        search\n      </button>\n      {state === \"search\" ? <SearchArea /> : <BoardsSidebar />}\n    </SidebarContainer>\n  );\n};\n\nexport default Sidebar;\n\n","import React, { useState } from \"react\";\nimport Youtube from \"react-youtube\";\nimport { ApplicationState } from \"../types\";\nimport { connect } from \"react-redux\";\n\ninterface Props {\n  videoId?: string;\n  onEnd: () => void;\n}\n\nconst Player = ({ videoId, onEnd }: Props) => {\n  const [player, setPlayer] = useState();\n\n  if (!videoId) return null;\n\n  return (\n    <YoutubePlayerWrapper onReady={setPlayer} videoId={videoId} onEnd={onEnd} />\n  );\n};\n\nconst YoutubePlayerWrapper = (props: any) => (\n  <div style={style}>\n    <Youtube\n      {...props}\n      onReady={e => props.onReady(e.target)}\n      onEnd={props.onEnd}\n      opts={{\n        height: \"150\",\n        width: \"400\",\n        playerVars: {\n          // https://developers.google.com/youtube/player_parameters\n          autoplay: 1\n        }\n      }}\n    />\n  </div>\n);\n\nconst style = {\n  position: \"fixed\",\n  right: 15,\n  bottom: 15\n} as {};\n\nconst mapState = (state: ApplicationState) => ({\n  videoId: state.videoBeingPlayed\n});\n\nexport default connect(mapState)(Player);\n","import {Board, Item} from \"./types\";\nimport {DraggableLocation, DropResult} from \"react-beautiful-dnd\";\n\nexport const handleDnd = (board: Board, result: DropResult): Board => {\n  const {destination, source} = result;\n  if (!destination) return board;\n\n  if (\n    destination.droppableId === source.droppableId &&\n    destination.index === source.index\n  )\n    return board;\n\n  if (source.droppableId === \"board\") {\n    const columnOrders = [...board.columnOrders];\n    columnOrders.splice(source.index, 1);\n    columnOrders.splice(destination.index, 0, result.draggableId);\n    return {\n      ...board,\n      columnOrders\n    };\n  }\n\n  const oldItem = getItemBeingDragged(board, source);\n\n  const without = removeItemFromBoard(board, source.droppableId, source.index);\n\n  return insertIntoColumn(\n    without,\n    destination.droppableId,\n    destination.index,\n    oldItem\n  );\n};\n\nconst getColumn = (board: Board, columnId: string) => board.columns[columnId];\n\nconst getItemBeingDragged = (board: Board, source: DraggableLocation) =>\n  board.columns[source.droppableId].items[source.index];\n\nconst removeItemFromBoard = (\n  board: Board,\n  columnId: string,\n  itemIndex: number\n): Board => {\n  const column = getColumn(board, columnId);\n  const items = [...column.items];\n  items.splice(itemIndex, 1);\n  return updateItemInColumn(board, columnId, items);\n};\n\nconst insertIntoColumn = (\n  board: Board,\n  columnId: string,\n  itemIndex: number,\n  item: any\n) => {\n  const column = getColumn(board, columnId);\n  const items = [...column.items];\n  items.splice(itemIndex, 0, item);\n  return updateItemInColumn(board, columnId, items);\n};\n\nconst updateItemInColumn = (\n  board: Board,\n  columnId: string,\n  items: Item[]\n): Board => {\n  return {\n    ...board,\n    columns: {\n      ...board.columns,\n      [columnId]: {\n        ...getColumn(board, columnId),\n        items\n      }\n    }\n  };\n};\n","import { ApplicationState } from \"./types\";\nimport { useState } from \"react\";\n\nlet _id = 100;\nconst id = () => _id++ + \"\";\n\nexport const initialState = (): ApplicationState => ({\n  boards: {\n    BOARD_1: {\n      boardId: \"BOARD_1\",\n      boardName: \"My Board\",\n      columns: {\n        \"1\": {\n          id: \"1\",\n          items: [\n            {\n              text: \"Short name\",\n              id: id(),\n              videoId: \"1\",\n              imageUrl: \"https://i.ytimg.com/vi/6Zo_FTUNDBI/mqdefault.jpg\"\n            },\n            {\n              text: \"Two lines of text but not that long\",\n              id: id(),\n              videoId: \"1\",\n              imageUrl: \"https://i.ytimg.com/vi/-xj2BmxEkcI/mqdefault.jpg\"\n            },\n            {\n              text: \"A very-very long text with lots of redundant infomation\",\n              id: id(),\n              videoId: \"1\",\n              imageUrl: \"https://i.ytimg.com/vi/ZchNI8bEnoY/mqdefault.jpg\"\n            }\n          ],\n          name: \"First\",\n          type: \"PLAYLIST\"\n        },\n        \"2\": {\n          id: \"2\",\n          items: [\n            { text: \"Title 2\", id: 'MY_VIDEO_ID', videoId: \"YOUTUBE_ID\", imageUrl: \"\" },\n            { text: \"Title 3\", id: id(), videoId: \"1\", imageUrl: \"\" },\n            { text: \"Title 4\", id: id(), videoId: \"1\", imageUrl: \"\" },\n            { text: \"Title 5\", id: id(), videoId: \"1\", imageUrl: \"\" },\n            { text: \"Title 6\", id: id(), videoId: \"1\", imageUrl: \"\" }\n          ],\n          name: \"Second\",\n          type: \"PLAYLIST\"\n        },\n        \"3\": {\n          id: \"3\",\n          items: [\n            { text: \"Album 1.1\", id: id(), videoId: \"1\", imageUrl: \"\" },\n            { text: \"Album 2.2\", id: id(), videoId: \"1\", imageUrl: \"\" },\n            { text: \"Album 3.3\", id: id(), videoId: \"1\", imageUrl: \"\" }\n          ],\n          name: \"Third\",\n          type: \"SEARCH\"\n        },\n        SEARCH: {\n          id: \"SEARCH\",\n          items: [{ text: \"Title 2\", id: 'MY_VIDEO_ID_AT_SEARCH', videoId: \"YOUTUBE_ID_AT_SEARCH\", imageUrl: \"\" },],\n          name: \"SEARCH\",\n          type: \"SEARCH\"\n        }\n      },\n      columnOrders: [\"1\", \"2\", \"3\"]\n    },\n    BOARD_2: {\n      boardName: \"ANOTHER BOARd\",\n      boardId: \"BOARD_2\",\n      columns: {\n        SEARCH: {\n          id: \"SEARCH\",\n          items: [],\n          name: \"SEARCH\",\n          type: \"SEARCH\"\n        }\n      },\n      columnOrders: []\n    }\n  },\n  boardsOrder: [\"BOARD_1\", \"BOARD_2\"],\n  selectedBoard: \"BOARD_1\"\n});\n","import { ApplicationState, Board, BoardsContainer, Column } from \"../types\";\nimport { Action, ACTIONS } from \"./actions\";\nimport { handleDnd } from \"../operations\";\nimport { initialState } from \"../state\";\n\nexport default (state: ApplicationState, action: Action): ApplicationState => {\n  if (action.type === ACTIONS.RESET) {\n    return initialState();\n  }\n  if (action.type === ACTIONS.REMOVE_COLUMN) {\n    const selectedBoard = getSelectedBoard(state);\n    const columns = {\n      ...selectedBoard.columns\n    };\n    delete columns[action.columnId];\n    const newBoard: Board = {\n      ...selectedBoard,\n      columnOrders: selectedBoard.columnOrders.filter(\n        cc => cc !== action.columnId\n      ),\n      columns: columns\n    };\n    return updateBoard(state, newBoard);\n  }\n  if (action.type === ACTIONS.CREATE_COLUMN) {\n    const selectedBoard = getSelectedBoard(state);\n    const newColumn: Column = {\n      items: [],\n      name: \"New Column\",\n      //TODO: extract into separate file and use a getter id generator\n      id: Math.random() + \"\",\n      type: \"PLAYLIST\"\n    };\n    return updateBoard(state, {\n      ...selectedBoard,\n      columnOrders: selectedBoard.columnOrders.concat([newColumn.id]),\n      columns: {\n        ...selectedBoard.columns,\n        [newColumn.id]: newColumn\n      }\n    });\n  }\n  if (action.type === ACTIONS.SEARCH_DONE) {\n    const selectedBoard = getSelectedBoard(state);\n    return updateBoard(state, {\n      ...selectedBoard,\n      columns: {\n        ...selectedBoard.columns,\n        SEARCH: {\n          ...selectedBoard.columns[\"SEARCH\"],\n          items: action.items\n        }\n      }\n    });\n  }\n  if (action.type === ACTIONS.SELECT_BOARD) {\n    return {\n      ...state,\n      selectedBoard: action.boardId\n    };\n  }\n  if (action.type === ACTIONS.RENAME_COLUMN) {\n    const selectedBoard = getSelectedBoard(state);\n    return updateBoard(state, {\n      ...selectedBoard,\n      columns: {\n        ...selectedBoard.columns,\n        [action.columnId]: {\n          ...selectedBoard.columns[action.columnId],\n          name: action.newName\n        }\n      }\n    });\n  }\n  if (action.type === ACTIONS.DRAG_END) {\n    //TODO: try to cover full cycle with specs\n    //probably trigger action in unit tests and check DOM state.\n    //there is no way right now to trigger dnd from DOM\n    const selectedBoard = getSelectedBoard(state);\n    return updateBoard(state, handleDnd(selectedBoard, action.dropResult));\n  }\n  if (action.type === ACTIONS.CREATE_BOARD) {\n    return {\n      ...state,\n      boardsOrder: state.boardsOrder.concat([action.boardId]),\n      boards: createDefaultBoard(state.boards, action.boardId),\n      selectedBoard: action.boardId\n    };\n  }\n  if (action.type === ACTIONS.RENAME_BOARD) {\n    return {\n      ...state,\n      boards: {\n        ...state.boards,\n        [action.boardId]: {\n          ...state.boards[action.boardId],\n          boardName: action.newText\n        }\n      }\n    };\n  }\n  if (action.type === ACTIONS.REMOVE_BOARD) {\n    const boards = state.boards;\n    //TODO: warning mutation\n    delete boards[action.boardId];\n\n    return {\n      ...state,\n      boardsOrder: state.boardsOrder.filter(b => b !== action.boardId),\n      selectedBoard: selectOtherBoard(\n        state.boardsOrder,\n        state.selectedBoard,\n        action.boardId\n      ),\n      boards\n    };\n  }\n  return state;\n};\n\nconst selectOtherBoard = (\n  boards: string[],\n  selectedBoard: string,\n  boardBeingRemoved: string\n) => {\n  if (selectedBoard !== boardBeingRemoved) return selectedBoard;\n  return boards.filter(b => b !== selectedBoard)[0];\n};\n\n//REDUCER HELPERS (candidates for nested reducers)\n\nconst updateBoard = (state: ApplicationState, board: Board) => ({\n  ...state,\n  boards: {\n    ...state.boards,\n    [board.boardId]: board\n  }\n});\n\nconst createDefaultBoard = (boards: BoardsContainer, boardId: string) => {\n  const newBoard: Board = JSON.parse(\n    //TODO: Extract into separate function without ugly BOARD_2\n    JSON.stringify(initialState().boards[\"BOARD_2\"])\n  );\n  newBoard.boardName = \"New Board\";\n  newBoard.boardId = boardId;\n  return {\n    ...boards,\n    [boardId]: newBoard\n  };\n};\n\n//SELECTOR CANDIDATES\nexport const getSelectedBoard = (state: ApplicationState) =>\n  state.boards[state.selectedBoard];\n\nexport const getColumnsForSelectedBoard = (\n  state: ApplicationState\n): Column[] => {\n  const board = getSelectedBoard(state);\n  if (!board) {\n    return [];\n  }\n  return board.columnOrders.map(id => board.columns[id]);\n};\n","import React from \"react\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport ColumnView from \"./Column\";\nimport { ApplicationState, Column } from \"../types\";\nimport Sidebar from \"../menu/Sidebar\";\nimport Player from \"../player/Player\";\nimport { connect } from \"react-redux\";\nimport { createColumn, endDrag, selectBoard } from \"./actions\";\nimport { getColumnsForSelectedBoard } from \"./reducer\";\nimport { BoardContainer } from \"./components\";\n\ninterface Props {\n  createColumn: any;\n  endDrag: any;\n  columns: Column[];\n}\n\nconst App = ({ createColumn, endDrag, columns }: Props) => {\n  return (\n    <DragDropContext onDragEnd={endDrag}>\n      <Sidebar />\n      <Droppable droppableId=\"board\" direction={\"horizontal\"} type=\"column\">\n        {provided => (\n          <BoardContainer ref={provided.innerRef} {...provided.droppableProps}>\n            {columns.map((column, index) => (\n              <ColumnView key={column.id} column={column} index={index} />\n            ))}\n            {provided.placeholder}\n            <button data-testid=\"column-create\" onClick={createColumn}>\n              + Playlist\n            </button>\n          </BoardContainer>\n        )}\n      </Droppable>\n      <Player\n        onEnd={() => console.log(\"on video end, TODO: play next track\")}\n      />\n    </DragDropContext>\n  );\n};\n\nconst mapState = (state: ApplicationState) => ({\n  columns: getColumnsForSelectedBoard(state)\n});\nexport default connect(\n  mapState,\n  {\n    createColumn,\n    selectBoard,\n    endDrag\n  }\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { ApplicationState } from \"../types\";\nimport { Action, ACTIONS } from \"./actions\";\n\nexport default (state: ApplicationState, action: Action): ApplicationState => {\n  if (action.type === ACTIONS.PLAY)\n    return {\n      ...state,\n      videoBeingPlayed: action.videoId\n    };\n  return state;\n};\n","import { createStore } from \"redux\";\nimport boardReducer from \"./board/reducer\";\nimport playerReducer from \"./player/reducer\";\nimport { initialState } from \"./state\";\nimport reduceReducers from \"reduce-reducers\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\n\n//even if I provide default state, TS still argues that I need to handle undefined as input within reducer\n// @ts-ignore\nconst rootReducer = reduceReducers(initialState(), boardReducer, playerReducer);\n\nconst persistConfig = {\n  key: \"MY_CONFIG\",\n  storage\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = createStore(persistedReducer);\nconst persistor = persistStore(store);\nexport default { store, persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./board\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { store } from \"./store\";\nimport { Provider } from \"react-redux\";\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\nReactDOM.render(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}